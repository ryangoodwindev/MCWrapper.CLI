using Newtonsoft.Json;

namespace MCWrapper.CLI.Connection
{
    /// <summary>
    /// This is the CLI client Response object
    /// </summary>
    /// <typeparam name="T"></typeparam>
    public class CliResponse<T>
    {
        #pragma warning disable CS8618 // Non-nullable field is uninitialized.
        /// <summary>
        /// This is the CLI client Response object
        /// </summary>
        public CliResponse()
        #pragma warning restore CS8618 // Non-nullable field is uninitialized.
        {
            Error = string.Empty;
            Request = new CLIClientRequestObject();
        }

        /// <summary>
        /// This is the CLI client Response object
        /// </summary>
        /// <param name="error"></param>
        /// <param name="request"></param>
        /// <param name="response"></param>
        public CliResponse(string error, CLIClientRequestObject request, T response)
        {
            Error = error;
            Request = request;
            Result = response;
        }

        /// <summary>
        /// If error is detected in stdout the message is rerouted to the Error property
        /// </summary>
        public string Error { get; set; }

        /// <summary>
        /// stdout output from multichain-cli.exe
        /// </summary>
        public CLIClientRequestObject Request { get; set; }

        /// <summary>
        /// stderr output from multichain-cli.exe
        /// </summary>
        public T Result { get; set; }
    }

    /// <summary>
    /// This is the MultiChain response object
    /// </summary>
    public class CLIClientRequestObject
    {
        /// <summary>
        /// This is the MultiChain response object
        /// </summary>
        public CLIClientRequestObject()
        {
            Method = string.Empty;
            Params = new object[] { };
            Id = string.Empty;
            ChainName = string.Empty;
        }

        /// <summary>
        /// This is the MultiChain response object
        /// </summary>
        /// <param name="method"></param>
        /// <param name="params"></param>
        /// <param name="id"></param>
        /// <param name="chainName"></param>
        public CLIClientRequestObject(string method, object[] @params, string id, string chainName)
        {
            Method = method;
            Params = @params;
            Id = id;
            ChainName = chainName;
        }

        /// <summary>
        /// The blockchain method that were passed
        /// </summary>
        [JsonProperty(PropertyName = "method")]
        public string Method { get; set; }

        /// <summary>
        /// The params that were passed
        /// </summary>
        [JsonProperty(PropertyName = "_params")]
        public object[] Params { get; set; }

        /// <summary>
        /// Id values that was generated by the blockchain
        /// </summary>
        [JsonProperty(PropertyName = "id")]
        public string Id { get; set; }

        /// <summary>
        /// The blockchain name that was passed
        /// </summary>
        [JsonProperty(PropertyName = "chain_name")]
        public string ChainName { get; set; }
    }
}
