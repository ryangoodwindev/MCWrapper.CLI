<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFrameworks>netcoreapp3.0;netcoreapp2.2;netcoreapp2.1</TargetFrameworks>
    <LangVersion>8.0</LangVersion>
    <Nullable>enable</Nullable>
    <Copyright>2019</Copyright>
    <PackageLicenseExpression>MIT</PackageLicenseExpression>
    <PackageProjectUrl>https://mcwrapper.com</PackageProjectUrl>
    <NeutralLanguage>en-US</NeutralLanguage>
    <PackageReleaseNotes>Converted to ArgumentList from Arguments when using Process.StartInfo, this should step us closer to working on Linux when using the CLI clients.

Added new extension method that allows for CliOptions to be passed as arguments instead of an Action&lt;T&gt;.
Added Secret Manager detection for extension method receiving IConfiguration pipeline.

Added support for MultChain Core blockchain method 'getinitstatus'

MultiChain Command Line Interface (CLI) client interfaces should be injected into Controllers or Razor Pages as follows.

IMultiChainCliGenerate :.....: Provide access to Generate MultChain Core methods.
getgenerate, gethashespersec, setgenerate

IMultiChainCliOffChain :....: Provides access to OffChain MultChain Core methods.
purgepublisheditems, purgestreamitems, retrievestreamitems

IMultiChainCliControl :.....: Provides access to Control MultChain Core methods.
clearmempool, getblockchainparams, getinfo, getinitstatus, getruntimeparams, 
help, pause, resume, setlastblock, setruntimeparam, stop

IMultiChainCliGeneral :.....: Provides access to General MultChain Core methods
getassetinfo, getbestblockhash, getblock, getblockchaininfo,
getblockcount, getblockhash, getchaintips, getdifficulty,
getfiltercode, getlastblockinfo, getmempoolinfo, getrawmempool,
getstreaminfo, gettxout, gettxoutsetinfo, listassets, listblocks,
listpermissions, liststreamfilters, liststreams, listtxfilters,
listupgrades, runstreamfilter, runtxfilter, teststreamfilter,
testtxfilter, verifychain, verifypermission

IMultiChainCliNetwork :.....: Provides access to Network MultChain Core methods 
addnode, getaddednodeinfo, getchunkqueueinfo, getchunkqueuetotals, 
getconnectioncount, getnettotals, getnetworkinfo, getpeerinfo, ping

IMultiChainCliUtility :.........: Provides access to Utility MultChain Core methods 
appendbinarycache, createbinarycache, createkeypairs,
createmultisig, deletebinarycache, estimatefee, estimatepriority,
validateaddress, verifymessage

IMultiChainCliMining :.........: Provides access to Mining MultChain Core methods 
getblocktemplate, getmininginfo, getnetworkhashps,
prioritisetransaction, submitblock

IMultiChainCliWallet :.........: Provides access to Wallet MultChain Core methods 
addmultisigaddress, appendrawexchange, approvefrom, backupwallet,
combineunspent, completerawexchange, create, createfrom,
createrawexchange, createrawsendfrom, decoderawexchange,
disablerawtransaction, dumpprivkey, dumpwallet, encryptwallet,
getaccount, getaccountaddress, getaddressbalances, getaddresses,
getaddressesbyaccount, getaddresstransaction, getassetbalances,
getassettransaction, getbalance, getmultibalances, getnewaddress,
getrawchangeaddress, getreceivedbyaccount, getreceivedbyaddress,
getstreamitem, getstreamkeysummary, getstreampublishersummary,
gettotalbalances, gettransaction, gettxoutdata, getunconfirmedbalance,
getwalletinfo, getwallettransaction, grant, grantfrom, grantwithdata,
grantwithdatafrom, importaddress, importprivkey, importwallet, issue,
issuefrom, issuemore, issuemorefrom, keypoolrefill, listaccounts,
listaddresses, listaddressgroupings, listaddresstransactions,
listassettransactions, listlockunspent, listreceivedbyaccount,
listreceivedbyaddress, listsinceblock, liststreamblockitems,
liststreamitems, liststreamkeyitems, liststreamkeys, liststreampublisheritems,
liststreampublishers, liststreamqueryitems, liststreamtxitems,
listtransactions, listunspent, listwallettransactions, lockunspent,
move, preparelockunspent, preparelockunspentfrom, publish, publishfrom,
publishmulti, publishmultifrom, purgepublisheditems, purgestreamitems,
resendwallettransactions, retrievestreamitems, revoke, revokefrom, send,
sendasset, sendassetfrom, sendfrom, sendfromaccount, sendmany, sendwithdata,
sendwithdatafrom, setaccount, settxfee, signmessage, subscribe, trimsubscribe,
txouttobinarycache, unsubscribe, walletlock, walletpassphrase,
walletpassphrasechange,

IMultiChainCliRaw :.........: Provides access to Raw MultChain Core methods 
appendrawchange, appendrawdata, appendrawtransaction,
createrawtransaction, decoderawtransaction, decodescript,
getrawtransaction, sendrawtransaction, signrawtransaction</PackageReleaseNotes>
    <Authors>Myndblock LLC, Ryan Goodwin</Authors>
    <Company>Myndblock LLC</Company>
    <Description>A simple .NET Core wrapper for the MultiChain Core blockchain library that utilitzes the Command Line Interface (CLI) to communicate with distributed ledgers. Written with C# 8.0 and supports .NET Core 2.1, 2.2, and 3.0.
** This library is only supported on Windows environments in this version.</Description>
    <RepositoryUrl>https://github.com/ryangoodwindev/MCWrapper.CLI</RepositoryUrl>
    <RepositoryType>GitHub</RepositoryType>
    <Version>4.0.5</Version>
  </PropertyGroup>

  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|AnyCPU'">
    <DocumentationFile></DocumentationFile>
  </PropertyGroup>

  <ItemGroup Condition="'$(TargetFramework)' == 'netcoreapp3.0'">
    <PackageReference Include="Microsoft.Extensions.Configuration.Json" Version="3.0.0" />
    <PackageReference Include="Microsoft.Extensions.DependencyInjection" Version="3.0.0" />
    <PackageReference Include="Microsoft.Extensions.Http.Polly" Version="3.0.0" />
    <PackageReference Include="Microsoft.Extensions.Options" Version="3.0.0" />
    <PackageReference Include="Microsoft.Extensions.Options.ConfigurationExtensions" Version="3.0.0" />
  </ItemGroup>

  <ItemGroup Condition="'$(TargetFramework)' == 'netcoreapp2.2'">
    <PackageReference Include="Microsoft.Extensions.Configuration.Json" Version="2.2.0" />
    <PackageReference Include="Microsoft.Extensions.DependencyInjection" Version="2.2.0" />
    <PackageReference Include="Microsoft.Extensions.Http.Polly" Version="2.2.0" />
    <PackageReference Include="Microsoft.Extensions.Options" Version="2.2.0" />
    <PackageReference Include="Microsoft.Extensions.Options.ConfigurationExtensions" Version="2.2.0" />
  </ItemGroup>

  <ItemGroup Condition="'$(TargetFramework)' == 'netcoreapp2.1'">
    <PackageReference Include="Microsoft.Extensions.Configuration.Json" Version="2.1.0" />
    <PackageReference Include="Microsoft.Extensions.DependencyInjection" Version="2.1.0" />
    <PackageReference Include="Microsoft.Extensions.Http.Polly" Version="2.1.0" />
    <PackageReference Include="Microsoft.Extensions.Options" Version="2.1.0" />
    <PackageReference Include="Microsoft.Extensions.Options.ConfigurationExtensions" Version="2.1.0" />
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="Newtonsoft.Json" Version="12.0.3" />
    <PackageReference Include="MCWrapper.Data.Models" Version="1.0.1" />
    <PackageReference Include="MCWrapper.Ledger.Actions" Version="1.0.1" />
    <PackageReference Include="MCWrapper.Ledger.Entities" Version="2.1.0" />
  </ItemGroup>

</Project>
